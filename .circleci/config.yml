version: 2.1

jobs:
  build:
    docker:
      - image: circleci/php:7.4
      - image: circleci/mysql:8.0
        environment:
          DB_HOST: mysql
          DB_CONNECTION: mysql
          MYSQL_ROOT_PASSWORD: root
          LARAVEL_BYPASS_ENV_CHECK: 1
    steps:
      - checkout

      - run:
          name: Install MySQL client
          command: |
            sudo apt-get update
            sudo apt-get install -y default-mysql-client

      - run:
          name: Install dependencies
          command: |
            cd ./src
            sudo docker-php-ext-install pdo pdo_mysql
            composer install

      - run:
          name: Set up environment
          command: |
            cd ./src
            cp .env.example .env.testing

      - run:
          name: Generate application key
          command: |
            cd ./src
            php artisan key:generate --env=testing


      - run:
          name: Create test database
          command: |
            mysql -u root -proot -h 127.0.0.1 -e "CREATE DATABASE IF NOT EXISTS demo_test;"

      - run:
          name: Clear cache
          command: |
            cd ./src
            php artisan cache:clear
            php artisan config:clear

      - run:
          name: Run tests
          command: |
            cd ./src
            php artisan migrate:fresh --env=testing
            php ./vendor/bin/phpunit --testsuite=Feature

  deploy:
    docker:
      - image: circleci/php:7.4
    steps:
      - add_ssh_keys
      - run:
          name: Deploy to EC2
          command: |
            ssh -o StrictHostKeyChecking=no -t ec2-user@${HOST_NAME} "cd laravel/src && \
              git pull origin main && \
              composer install -n --no-dev --prefer-dist && \
              npm ci && \
              npm run prod && \
              php artisan migrate --force && \
              php artisan config:cache"

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main

      - deploy:
          name: Deploy Master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main
            fi
